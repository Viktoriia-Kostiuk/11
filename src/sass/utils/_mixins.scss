@function decimal-round($number, $digits: 0, $mode: round) {
  $n: 1;
  // $number must be a number
  @if type-of($number) != number {
    @warn '#{ $number } is not a number.';
    @return $number;
  }
  // $digits must be a unitless number
  @if type-of($digits) != number {
    @warn '#{ $digits } is not a number.';
    @return $number;
  } @else if not unitless($digits) {
    @warn '#{ $digits } has a unit.';
    @return $number;
  }
  @if $digits > 0 {
    @for $i from 1 through $digits {
      $n: $n * 10;
    }
  }
  @if $mode == round {
    @return round($number * $n) / $n;
  } @else if $mode == ceil {
    @return ceil($number * $n) / $n;
  } @else if $mode == floor {
    @return floor($number * $n) / $n;
  } @else {
    @warn '#{ $mode } is undefined keyword.';
    @return $number;
  }
}

@mixin font($fs: 16px, $fw: 500, $lh: 28px, $ls: 0.04em) {
  font-size: $fs;
  font-weight: $fw;
  line-height: decimal-round($lh/$fs, 3);
  letter-spacing: $ls;
}


@mixin button(
  $mw: 62px,
  $btn-clr: $accent-btn-background-color,
  $txt-clr: $text-color,
  $fs: 8px,
  $fw: 400,
  $lh: 10px,
  $pt: 10px,
  $pb: 10px,
  $pl: 10px,
  $pr: 10px
) {
  min-width: $mw;
  background-color: $btn-clr;
  border: none;
  border-radius: 20px;
  display: inline-block;
  font-family: inherit;
  font-weight: $fw;
  font-size: $fs;
  line-height: decimal-round($lh/$fs, 3);
  text-align: center;
  letter-spacing: 0.06em;
  color: $txt-clr;
  padding: $pt $pr $pb $pl;
}
